{"ast":null,"code":"var _jsxFileName = \"/home/bourq/Development/code/phase2/project/lolbuilderpro/src/CreateLogin.js\",\n    _s = $RefreshSig$();\n\nimport { react, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  }\n}));\n\nlet CreateLogin = () => {\n  _s();\n\n  const classes = useStyles();\n  const [newUser, setNewUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const history = useHistory();\n\n  let handleChange = e => {\n    setNewUser({ ...newUser,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  let handleSubmit = e => {\n    e.preventDefault();\n\n    if (newUser.username === \"\" || newUser.password === \"\") {\n      alert('Please input a valid username or password');\n      setNewUser({\n        username: \"\",\n        password: \"\"\n      });\n    } else {\n      fetch('http://localhost:3000/users', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'Application/json'\n        },\n        body: JSON.stringify(newUser)\n      }).then(res => res.json()).then(data => {\n        history.push('/login');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"createLoginForm\",\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-login-card\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-error\",\n          label: \"username\",\n          name: \"username\" //helperText=\"Incorrect entry. Please create a new login\" \n          ,\n          variant: \"filled\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-error-helper-text\",\n          label: \"password\",\n          name: \"password\" //helperText=\"Incorrect entry. Please try again.\" \n          ,\n          variant: \"outlined\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateLogin, \"0ThZynxY6F4qHTNh19M6ZijIKJ8=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = CreateLogin;\nexport default CreateLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateLogin\");","map":{"version":3,"sources":["/home/bourq/Development/code/phase2/project/lolbuilderpro/src/CreateLogin.js"],"names":["react","useState","useHistory","makeStyles","Button","TextField","useStyles","theme","root","margin","spacing","width","CreateLogin","classes","newUser","setNewUser","username","password","history","handleChange","e","target","name","value","handleSubmit","preventDefault","alert","fetch","method","headers","body","JSON","stringify","then","res","json","data","push"],"mappings":"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","sourcesContent":["import { react, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200,\n      },\n    },\n  }));\n\nlet CreateLogin = () => {\n    const classes = useStyles();   \n    const [newUser, setNewUser] = useState({\n        username: \"\",\n        password: \"\"\n    })\n    const history = useHistory()\n\n\n    let handleChange = (e) => {\n        setNewUser({\n            ...newUser,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    let handleSubmit = (e) => {\n        e.preventDefault()\n        if(newUser.username === \"\" || newUser.password === \"\"){\n            alert('Please input a valid username or password')\n            setNewUser({\n                username: \"\",\n                password: \"\"\n            })\n        } else {\n            fetch('http://localhost:3000/users', {\n            method: 'POST',\n            headers: {'Content-type':'Application/json'}, \n            body: JSON.stringify(newUser)\n            })\n            .then(res => res.json())\n            .then(data => {\n                history.push('/login')\n            })\n        }\n        \n    }\n\n    return (\n        <form id=\"createLoginForm\" className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div className=\"create-login\">\n                <div className=\"create-login-card\">\n                    <TextField\n                        id=\"filled-error\"\n                        label=\"username\"\n                        name=\"username\"\n                        //helperText=\"Incorrect entry. Please create a new login\" \n                        variant=\"filled\"\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        id=\"filled-error-helper-text\"\n                        label=\"password\"\n                        name=\"password\"\n                        //helperText=\"Incorrect entry. Please try again.\" \n                        variant=\"outlined\"\n                        onChange={handleChange}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">Submit</Button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default CreateLogin"]},"metadata":{},"sourceType":"module"}