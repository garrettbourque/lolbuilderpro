{"ast":null,"code":"var _jsxFileName = \"/home/bourq/Development/code/phase2/project/lolbuilderpro/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport { react, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  }\n}));\n\nlet Login = ({\n  loginValidated,\n  setLoginValidated\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [currentUser, setCurrentUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const history = useHistory();\n  const [usernameError, setUsernameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  let handleCreateLogin = () => {\n    history.push('/createlogin');\n  };\n\n  let handleChange = e => {\n    setCurrentUser({ ...currentUser,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  let handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://localhost:3000/users').then(res => res.json()).then(data => {\n      if (currentUser.username === \"\" || currentUser.username === undefined) {\n        alert('Please input a username');\n        setLoginValidated(false);\n        setUsernameError(true);\n        document.querySelector('#loginForm').reset();\n      } else {\n        let foundUser = data.find(user => {\n          if (user.username === currentUser.username) {\n            setUsernameError(false);\n            return user.username === currentUser.username;\n          } else {\n            history.push('/login');\n            document.querySelector('#loginForm').reset();\n            setLoginValidated(false);\n            setUsernameError(true);\n          }\n        });\n        console.log(currentUser.password);\n        console.log(foundUser.password);\n\n        if (currentUser.password === undefined || currentUser.password === \"\") {\n          alert('Please input a password');\n          history.push('/login');\n          setLoginValidated(false);\n          setPasswordError(true);\n        } else if (currentUser.password == foundUser.password) {\n          setLoginValidated(true);\n          setUsernameError(false);\n          setPasswordError(false);\n          console.log('working');\n          history.push('/');\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"loginForm\",\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          error: usernameError === true ? true : false,\n          id: \"filled-error\",\n          label: \"username\",\n          name: \"username\",\n          defaultValue: currentUser.username,\n          helperText: usernameError === true ? \"Incorrect entry. Please create a new login.\" : null,\n          variant: \"filled\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          error: passwordError === true ? true : false,\n          id: \"filled-error-helper-text\",\n          label: \"password\",\n          name: \"password\",\n          defaultValue: currentUser.password,\n          helperText: passwordError === true ? \"Incorrect entry. Please enter a valid password.\" : null,\n          variant: \"outlined\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => handleCreateLogin(),\n            children: \"Create Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"nxqavdlUN5hHnq/Cp36nOwig64w=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/bourq/Development/code/phase2/project/lolbuilderpro/src/Login.js"],"names":["react","useState","useHistory","makeStyles","Button","TextField","useStyles","theme","root","margin","spacing","width","Login","loginValidated","setLoginValidated","classes","currentUser","setCurrentUser","username","password","history","usernameError","setUsernameError","passwordError","setPasswordError","handleCreateLogin","push","handleChange","e","target","name","value","handleSubmit","preventDefault","fetch","then","res","json","data","undefined","alert","document","querySelector","reset","foundUser","find","user","console","log"],"mappings":"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","sourcesContent":["import { react, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200,\n      },\n    },\n  }));\n\nlet Login = ({ loginValidated, setLoginValidated }) => {\n    const classes = useStyles();   \n    const [currentUser, setCurrentUser] = useState({\n        username: \"\",\n        password: \"\"\n    })\n    const history = useHistory()\n    const [usernameError, setUsernameError] = useState(false)\n    const [passwordError, setPasswordError] = useState(false)\n    \n    let handleCreateLogin = () => {\n        history.push('/createlogin')\n    }\n\n    let handleChange = (e) => {\n        setCurrentUser({\n            ...currentUser,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    let handleSubmit = (e) => {\n        e.preventDefault()\n        fetch('http://localhost:3000/users')\n        .then(res => res.json())\n        .then(data => {\n            if (currentUser.username===\"\" || currentUser.username===undefined){\n                alert('Please input a username')\n                setLoginValidated(false)\n                setUsernameError(true)\n                document.querySelector('#loginForm').reset()\n            } else {\n                let foundUser = data.find(user => {\n                    if(user.username===currentUser.username){\n                        setUsernameError(false)\n                        return user.username === currentUser.username\n                    } else {\n                        history.push('/login')\n                        document.querySelector('#loginForm').reset()\n                        setLoginValidated(false)\n                        setUsernameError(true)\n                    }\n                })\n                console.log(currentUser.password)\n                console.log(foundUser.password)\n    \n                if (currentUser.password === undefined || currentUser.password === \"\") {\n                    alert('Please input a password')\n                    history.push('/login')\n                    setLoginValidated(false)\n                    setPasswordError(true)\n                } else if (currentUser.password==foundUser.password) {\n                    setLoginValidated(true)\n                    setUsernameError(false)\n                    setPasswordError(false)\n                    console.log('working')\n                    history.push('/')\n                }               \n            }\n        })\n    }\n\n    return (\n        <form id=\"loginForm\" className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div className=\"login\">\n                    <div className=\"login-card\">\n                        <TextField\n                            error={usernameError===true ? true : false}\n                            id=\"filled-error\"\n                            label=\"username\"\n                            name=\"username\"\n                            defaultValue={currentUser.username}\n                            helperText={usernameError===true ? \"Incorrect entry. Please create a new login.\" : null}\n                            variant=\"filled\"\n                            onChange={handleChange}\n                        />\n                        <TextField\n                            error={passwordError===true ? true : false}\n                            id=\"filled-error-helper-text\"\n                            label=\"password\"\n                            name=\"password\"\n                            defaultValue={currentUser.password}\n                            helperText={passwordError===true ? \"Incorrect entry. Please enter a valid password.\" : null}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                        <div className=\"login-buttons\">\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" >Submit</Button>\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleCreateLogin()}>Create Login</Button>\n                        </div>\n                    </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}