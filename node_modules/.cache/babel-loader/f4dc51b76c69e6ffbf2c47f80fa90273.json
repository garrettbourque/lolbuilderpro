{"ast":null,"code":"import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SelectGameMode=function SelectGameMode(_ref){var highlightGameMode1v1=_ref.highlightGameMode1v1,setHighlightGameMode1v1=_ref.setHighlightGameMode1v1,highlightGameMode2v2=_ref.highlightGameMode2v2,setHighlightGameMode2v2=_ref.setHighlightGameMode2v2,highlightMapSR=_ref.highlightMapSR,setHighlightMapSR=_ref.setHighlightMapSR,highlightMapHA=_ref.highlightMapHA,setHighlightMapHA=_ref.setHighlightMapHA,selectedMap=_ref.selectedMap,setSelectedMap=_ref.setSelectedMap,selectedGameMode=_ref.selectedGameMode,setSelectedGameMode=_ref.setSelectedGameMode;var history=useHistory();var handleSelectMap=function handleSelectMap(e){setSelectedMap(e.target.textContent);if(e.target.textContent===\"Summoner's Rift\"){setHighlightMapHA(false);setHighlightMapSR(!highlightMapSR);}else{setHighlightMapSR(false);setHighlightMapHA(!highlightMapHA);}};var handleSelectGameMode=function handleSelectGameMode(e){setSelectedGameMode(e.target.id);if(e.target.id===\"1v1\"){setHighlightGameMode2v2(false);setHighlightGameMode1v1(!highlightGameMode1v1);}else{setHighlightGameMode1v1(false);setHighlightGameMode2v2(!highlightGameMode2v2);}// if(selectedMap!==\"\" && selectedGameMode!==\"\") {\n//     history.push('/')\n// }\n};var handleGoBack=function handleGoBack(){history.push('/');};return/*#__PURE__*/_jsxs(\"div\",{className:\"action-container\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"summoners-rift\",className:\"summoners-rift\",onClick:function onClick(e){return handleSelectMap(e);},style:highlightMapSR===true?{border:\"5px solid yellowgreen\"}:{border:\"none\"},children:\"Summoner's Rift\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"select-game-mode-container\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"1v1\",className:\"select-game-mode-button\",onClick:function onClick(e){return handleSelectGameMode(e);},style:highlightGameMode1v1===true?{border:\"5px solid yellowgreen\"}:{border:\"none\"},children:\"1 v 1\"}),/*#__PURE__*/_jsx(\"button\",{id:\"2v2\",className:\"select-game-mode-button\",onClick:function onClick(e){return handleSelectGameMode(e);},style:highlightGameMode2v2===true?{border:\"5px solid yellowgreen\"}:{border:\"none\"},children:\"2 v 2\"}),/*#__PURE__*/_jsx(\"button\",{className:\"go-back\",onClick:function onClick(){return handleGoBack();},children:\"Go back\"})]}),/*#__PURE__*/_jsx(\"button\",{id:\"Howling Abyss\",className:\"howling-abyss\",onClick:function onClick(e){return handleSelectMap(e);},style:highlightMapHA===true?{border:\"5px solid yellowgreen\"}:{border:\"none\"},children:\"Howling Abyss\"})]});};export default SelectGameMode;","map":{"version":3,"sources":["/home/bourq/Development/code/phase2/project/lolbuilderpro/src/SelectGameMode.js"],"names":["useHistory","SelectGameMode","highlightGameMode1v1","setHighlightGameMode1v1","highlightGameMode2v2","setHighlightGameMode2v2","highlightMapSR","setHighlightMapSR","highlightMapHA","setHighlightMapHA","selectedMap","setSelectedMap","selectedGameMode","setSelectedGameMode","history","handleSelectMap","e","target","textContent","handleSelectGameMode","id","handleGoBack","push","border"],"mappings":"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","sourcesContent":["import { useHistory } from 'react-router-dom'\n\nlet SelectGameMode = ({ \n        highlightGameMode1v1, setHighlightGameMode1v1,\n        highlightGameMode2v2, setHighlightGameMode2v2,\n        highlightMapSR, setHighlightMapSR,\n        highlightMapHA, setHighlightMapHA,\n        selectedMap, setSelectedMap, \n        selectedGameMode, setSelectedGameMode }) => {\n    const history = useHistory()\n\n    let handleSelectMap = (e) => {\n        setSelectedMap(e.target.textContent)\n        if(e.target.textContent===\"Summoner's Rift\") {\n            setHighlightMapHA(false)\n            setHighlightMapSR(!highlightMapSR)\n        } else {\n            setHighlightMapSR(false)\n            setHighlightMapHA(!highlightMapHA)\n        }\n    }\n\n    let handleSelectGameMode = (e) => {\n        setSelectedGameMode(e.target.id)\n        if(e.target.id===\"1v1\") {\n            setHighlightGameMode2v2(false)\n            setHighlightGameMode1v1(!highlightGameMode1v1)\n        } else {\n            setHighlightGameMode1v1(false)\n            setHighlightGameMode2v2(!highlightGameMode2v2)\n        }\n                \n        // if(selectedMap!==\"\" && selectedGameMode!==\"\") {\n        //     history.push('/')\n        // }\n    }\n\n    let handleGoBack= () => {\n        history.push('/')\n    }\n\n    return (\n        <div className=\"action-container\">\n            <button \n                id=\"summoners-rift\" \n                className='summoners-rift' \n                onClick={(e) => handleSelectMap(e)}\n                style={highlightMapSR===true ? {border:\"5px solid yellowgreen\"} : {border:\"none\"}}>\n                Summoner's Rift\n            </button>\n            <div className='select-game-mode-container'>\n                <button \n                    id=\"1v1\" \n                    className=\"select-game-mode-button\" \n                    onClick={(e) => handleSelectGameMode(e)}\n                    style={highlightGameMode1v1===true ? {border:\"5px solid yellowgreen\"} : {border:\"none\"}}\n                        >1 v 1\n                </button>\n                <button \n                    id=\"2v2\" \n                    className=\"select-game-mode-button\" \n                    onClick={(e) => handleSelectGameMode(e)}\n                    style={highlightGameMode2v2===true ? {border:\"5px solid yellowgreen\"} : {border:\"none\"}}\n                        >2 v 2\n                </button>\n                <button className=\"go-back\" onClick={()=> handleGoBack()}>Go back</button>\n            </div>\n            <button \n                id=\"Howling Abyss\" \n                className='howling-abyss' \n                onClick={(e) => handleSelectMap(e)}\n                style={highlightMapHA===true ? {border:\"5px solid yellowgreen\"} : {border:\"none\"}}\n                >\n                Howling Abyss\n            </button>\n\n        </div>)\n}\n\nexport default SelectGameMode"]},"metadata":{},"sourceType":"module"}