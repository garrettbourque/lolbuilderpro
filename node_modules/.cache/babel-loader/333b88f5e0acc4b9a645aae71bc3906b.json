{"ast":null,"code":"var _jsxFileName = \"/home/bourq/Development/code/phase2/project/lolbuilderpro/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport { react, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    }\n  }\n}));\n\nlet Login = ({\n  loginValidated,\n  setLoginValidated\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [currentUser, setCurrentUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const history = useHistory();\n\n  let handleCreateLogin = () => {\n    history.push('/createlogin');\n  };\n\n  let handleChange = e => {\n    setCurrentUser({ ...currentUser,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  let handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://localhost:3000/users').then(res => res.json()).then(data => {\n      let foundUser = data.find(user => {\n        if (user.username === currentUser.username) {\n          return user.username === currentUser.username;\n        } else {\n          alert('Please enter a valid username');\n          history.push('/login');\n          document.querySelector('#loginForm').reset();\n          setLoginValidated(false);\n        }\n      });\n\n      if (foundUser.password == currentUser.password) {\n        alert('This is a valid username and password');\n        history.push('/');\n        setLoginValidated(true);\n      } else {\n        alert('Please enter a valid username or password');\n        history.push('/login');\n        document.querySelector('#loginForm').reset();\n        setLoginValidated(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"loginForm\",\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-error\",\n          label: \"username\",\n          name: \"username\",\n          defaultValue: currentUser.username //helperText=\"Incorrect entry. Please create a new login\" \n          ,\n          variant: \"filled\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-error-helper-text\",\n          label: \"password\",\n          name: \"password\",\n          defaultValue: currentUser.password //helperText=\"Incorrect entry. Please try again.\" \n          ,\n          variant: \"outlined\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => handleCreateLogin(),\n            children: \"Create Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"8Bu8UOjp5czAUAanr/XsiDs/Wh8=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/bourq/Development/code/phase2/project/lolbuilderpro/src/Login.js"],"names":["react","useState","useHistory","makeStyles","Button","TextField","useStyles","theme","root","margin","spacing","width","Login","loginValidated","setLoginValidated","classes","currentUser","setCurrentUser","username","password","history","handleCreateLogin","push","handleChange","e","target","name","value","handleSubmit","preventDefault","fetch","then","res","json","data","foundUser","find","user","alert","document","querySelector","reset"],"mappings":"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","sourcesContent":["import { react, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200,\n      },\n    },\n  }));\n\nlet Login = ({ loginValidated, setLoginValidated }) => {\n    const classes = useStyles();   \n    const [currentUser, setCurrentUser] = useState({\n        username: \"\",\n        password: \"\"\n    })\n    const history = useHistory()\n\n    let handleCreateLogin = () => {\n        history.push('/createlogin')\n    }\n\n    let handleChange = (e) => {\n        setCurrentUser({\n            ...currentUser,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    let handleSubmit = (e) => {\n        e.preventDefault()\n        fetch('http://localhost:3000/users')\n        .then(res => res.json())\n        .then(data => {\n           let foundUser = data.find(user => {\n                if(user.username===currentUser.username){\n                    return user.username === currentUser.username\n                } else {\n                    alert('Please enter a valid username')\n                    history.push('/login')\n                    document.querySelector('#loginForm').reset()\n                    setLoginValidated(false)\n                }\n            })\n            if (foundUser.password == currentUser.password) {\n                alert('This is a valid username and password')\n                history.push('/')\n                setLoginValidated(true)\n            } else {\n                alert('Please enter a valid username or password')\n                history.push('/login')\n                document.querySelector('#loginForm').reset()\n                setLoginValidated(false)\n            }\n        })\n    }\n\n    return (\n        <form id=\"loginForm\" className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div className=\"login\">\n                    <div className=\"login-card\">\n                        <TextField\n                            id=\"filled-error\"\n                            label=\"username\"\n                            name=\"username\"\n                            defaultValue={currentUser.username}\n                            //helperText=\"Incorrect entry. Please create a new login\" \n                            variant=\"filled\"\n                            onChange={handleChange}\n                        />\n                        <TextField\n                            id=\"filled-error-helper-text\"\n                            label=\"password\"\n                            name=\"password\"\n                            defaultValue={currentUser.password}\n                            //helperText=\"Incorrect entry. Please try again.\" \n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                        <div className=\"login-buttons\">\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">Submit</Button>\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleCreateLogin()}>Create Login</Button>\n                        </div>\n                    </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}