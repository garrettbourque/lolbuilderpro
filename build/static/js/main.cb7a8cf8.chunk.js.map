{"version":3,"sources":["Login.js","CreateLogin.js","Search.js","Home.js","SelectGameMode.js","Play.js","Battle.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","Login","currentUser","setCurrentUser","setLoginValidated","loginValidated","classes","history","useHistory","useState","usernameError","setUsernameError","passwordError","setPasswordError","handleChange","e","target","name","value","id","className","noValidate","autoComplete","onSubmit","preventDefault","fetch","then","res","json","data","findID","find","user","username","undefined","alert","foundUser","push","password","console","log","style","height","TextField","error","label","defaultValue","helperText","variant","onChange","Button","color","type","onClick","CreateLogin","newUser","setNewUser","method","headers","body","JSON","stringify","Search","searchTerm","onChangeSearch","placeholder","event","Home","setSelectedChampion","selectedMap","setSelectedMap","selectedChampion","selectedGameMode","setSelectedGameMode","leagueData","setLeagueData","useEffect","userData","champion","Object","values","Math","floor","random","length","foundChampion","filter","champ","toLowerCase","includes","SelectGameMode","highlightGameMode1v1","setHighlightGameMode1v1","highlightGameMode2v2","setHighlightGameMode2v2","highlightMapSR","setHighlightMapSR","highlightMapHA","setHighlightMapHA","handleSelectMap","textContent","handleSelectGameMode","border","Play","itemData","setItemData","selectedItems","setSearchTerm","tempStat","hasItem2","hp","hpperlevel","mp","mpperlevel","movespeed","armor","armorperlevel","spellblock","spellblockperlevel","attackrange","hpregen","hpregenperlevel","mpregen","mpregenperlevel","crit","critperlevel","attackdamage","attackdamageperlevel","attackspeedperlevel","attackspeed","handleSelectedItem","item","checking","result","indexOf","iCanHas","itemsToDisplay","removeItem","space","title","backgroundImage","number","stats","map","status","keys","element","displayStats","src","image","full","alt","Battle","opponentChampion","setOpponent","healthState","setHealthState","magicState","setMagicState","attackState","defendState","setDefendState","defenseModeOn","setDefenseModeOn","healthStateOpp","setHealthStateOpp","magicStateOpp","setMagicStateOpp","attackStateOpp","defendStateOpp","setDefendStateOpp","defenseModeOnOpp","setDefenseModeOnOpp","oppMoveArray","randomMove","randomOppMove","parentElement","handleUseItem","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb7a8cf8.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200,\n      },\n    },\n  }));\n\nlet Login = ({ currentUser, setCurrentUser, loginValidated, setLoginValidated }) => {\n    const classes = useStyles();   \n    const history = useHistory()\n    const [usernameError, setUsernameError] = useState(false)\n    const [passwordError, setPasswordError] = useState(false)\n    \n    let handleCreateLogin = () => {\n        history.push('/createlogin')\n    }\n\n    let handleChange = (e) => {\n        setCurrentUser({\n            ...currentUser,\n            [e.target.name] : e.target.value\n            \n        })\n    }\n\n    let handleSubmit = (e) => {\n        e.preventDefault()\n        fetch('http://localhost:3000/users')\n        .then(res => res.json())\n        .then(data => {\n            let findID = data.find(user => {\n                return user.username === currentUser.username\n            })\n            setCurrentUser({\n                ...currentUser,\n                id: findID.id\n            })\n        })\n\n\n        fetch('http://localhost:3000/users')\n        .then(res => res.json())\n        .then(data => {\n            if (currentUser.username===\"\" || currentUser.username===undefined){\n                alert('Please input a username')\n                setLoginValidated(false)\n            } else {\n                let foundUser = data.find(user => {\n                    if(user.username===currentUser.username){\n                        setUsernameError(false)\n                        return user.username === currentUser.username\n                    } else if (user.username !== currentUser.username) {\n                        history.push('/login')\n                        setLoginValidated(false)\n                        setUsernameError(true)\n                    } else {\n                        history.push('/login')\n                        setLoginValidated(false)\n                        setUsernameError(true)  \n                    }\n                })\n                \n                if (foundUser===\"\" || foundUser=== undefined) {\n                    alert('That user does not exist. Please create a new login.')\n                } else {\n                    if (currentUser.password === undefined || currentUser.password === \"\") {\n                        alert('Please input a password')\n                        history.push('/login')\n                        setLoginValidated(false)\n                        setPasswordError(true)\n                    } else if (currentUser.password==foundUser.password) {\n                        setLoginValidated(true)\n                        setUsernameError(false)\n                        setPasswordError(false)\n                        console.log('working')\n                        history.push('/')\n                    }      \n                }        \n            }\n        })\n    }\n\n    return (\n        <form id=\"loginForm\" className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div className=\"login\">\n                    <div className=\"login-card\"\n                        style={usernameError=== true ? {height:'37%'} : {height:'31%'}}\n                    >\n                        <TextField\n                            error={usernameError===true ? true : false}\n                            id=\"filled-error\"\n                            label=\"username\"\n                            name=\"username\"\n                            defaultValue={currentUser.username}\n                            helperText={usernameError===true ? \"That user does not exist. Please create a new login.\" : null}\n                            variant=\"filled\"\n                            onChange={handleChange}\n                        />\n                        <TextField\n                            error={passwordError===true ? true : false}\n                            id=\"filled-error-helper-text\"\n                            label=\"password\"\n                            name=\"password\"\n                            defaultValue={currentUser.password}\n                            helperText={passwordError===true ? \"Incorrect entry. Please enter a valid password.\" : null}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                        <div className=\"login-buttons\">\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\" >Submit</Button>\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleCreateLogin()}>Create Login</Button>\n                        </div>\n                    </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Login","import { react, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200,\n      },\n    },\n  }));\n\nlet CreateLogin = () => {\n    const classes = useStyles();   \n    const [newUser, setNewUser] = useState({\n        username: \"\",\n        password: \"\"\n    })\n    const history = useHistory()\n\n\n    let handleChange = (e) => {\n        setNewUser({\n            ...newUser,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    let handleSubmit = (e) => {\n        e.preventDefault()\n        if(newUser.username === \"\" || newUser.password === \"\"){\n            alert('Please input a valid username or password')\n            setNewUser({\n                username: \"\",\n                password: \"\"\n            })\n        } else {\n            fetch('http://localhost:3000/users', {\n            method: 'POST',\n            headers: {'Content-type':'Application/json'}, \n            body: JSON.stringify(newUser)\n            })\n            .then(res => res.json())\n            .then(data => {\n                history.push('/login')\n            })\n        }\n        \n    }\n\n    return (\n        <form id=\"createLoginForm\" className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div className=\"create-login\">\n                <div className=\"create-login-card\">\n                    <TextField\n                        id=\"filled-error\"\n                        label=\"username\"\n                        name=\"username\"\n                        //helperText=\"Incorrect entry. Please create a new login\" \n                        variant=\"filled\"\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        id=\"filled-error-helper-text\"\n                        label=\"password\"\n                        name=\"password\"\n                        //helperText=\"Incorrect entry. Please try again.\" \n                        variant=\"outlined\"\n                        onChange={handleChange}\n                    />\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">Submit</Button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default CreateLogin","\nimport React,{useState} from \"react\";\nimport FormControl from '@material-ui/core/FormControl';\n\nfunction Search({searchTerm, onChangeSearch}) {\n \n  function handleChange(event) {\n    onChangeSearch(event.target.value);\n    console.log(event.target.value)\n  }\n\n \n  return (\n    <div className=\"ui search\">\n      <div className=\"ui icon input\">\n        <input className=\"prompt\" placeholder={\" Search\"} value={searchTerm} onChange={handleChange}  />\n        <i className=\"search icon\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Search;","import { React, useState, useEffect } from 'react'\nimport Search from \"./Search\"\nimport { useHistory } from 'react-router-dom'\n\n\n\nlet Home = ({\n        currentUser, setCurrentUser, \n        selectedMap, setSelectedMap, \n        selectedChampion, setSelectedChampion, \n        selectedGameMode, setSelectedGameMode }) => {\n    const [leagueData, setLeagueData] = useState([])\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const history = useHistory()\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/users/${currentUser.id}`)\n        .then(res=> res.json())\n        .then(userData => {\n            console.log(userData)\n            if(userData.champion===undefined || userData.champion===\"\"){\n                fetch('http://ddragon.leagueoflegends.com/cdn/11.12.1/data/en_US/champion.json')\n                .then(res => res.json())\n                .then(data => {\n                    setLeagueData(data.data)\n                    setSelectedChampion(Object.values(data.data)[Math.floor(Math.random() * Object.values(data.data).length)])\n                })\n            } else {\n                fetch('http://ddragon.leagueoflegends.com/cdn/11.12.1/data/en_US/champion.json')\n                .then(res => res.json())\n                .then(data => {\n                    setLeagueData(data.data)\n                    let foundChampion = Object.values(data.data).find(champion => {\n                        console.log(champion.name)\n                        console.log(userData.champion)\n                        return champion.name === userData.champion\n                    })\n                    console.log(foundChampion)\n                    setSelectedChampion(foundChampion)\n                })\n            }\n        })\n    },[setSelectedChampion])\n   \n    let handleSelectChampion = (champion) => {\n\n        fetch(`http://localhost:3000/users/${currentUser.id}`, {\n            method: 'PATCH', \n            headers: {'Content-type':'application/json'}, \n            body: JSON.stringify({\n                username: currentUser.username,\n                password: currentUser.password,\n                \"champion\": champion.name\n            })\n        })\n        .then(res => res.json())\n        .then(data => setSelectedChampion(champion))\n\n    }\n\n    //Select a filtered list of champs when entering a search\n    const champsToDisplay = Object.values(leagueData).filter((champ) =>\n      champ.name.toLowerCase().includes(searchTerm.toLowerCase())\n      ); \n\n    \n    let handleSelectGameMode = () => {\n        history.push('/selectgamemode')\n    }\n\n\n    let handleBuild = () => {     \n        history.push('/play/'+selectedChampion.name)\n\n    let handlePlay = () => {\n        history.push('/battle')\n\n    }\n\n    return (\n        <div className='main-container'>\n            <div className=\"game-setup-container\">\n                <div><b>Map:</b> {selectedMap}</div>\n                <div><b>Champion:</b> {selectedChampion.name} {selectedChampion.title}</div>\n                <div><b>Game Mode:</b> {selectedGameMode}</div>\n            </div>\n\n            <div className='action-container'>\n                <div className='champion-viewer-container' style={{backgroundImage: `url(\n                    http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${selectedChampion.name}_0.jpg)`}}\n                >\n                    <h3 className=\"selected-champion-info\">{selectedChampion.name} {selectedChampion.title}</h3>\n                    <div className=\"champion-description\">{selectedChampion.blurb}</div>\n                </div>\n                <div className='play-container'>\n                    <div className=\"select-game\">\n                        <button className=\"select-game-button\" onClick={() => handleSelectGameMode()}>\n                            <em>Select Game Mode</em>\n                        </button>\n                    </div>\n                    <div className=\"play-card\">\n\n                        <button className=\"build-button\"onClick={() => handleBuild()}><em>Make a Build</em></button>\n\n                        <button className=\"play-button\" onClick={() => handlePlay()}>Play</button>\n\n                    </div>\n\n                </div>\n                <div className='new-builds-container'>\n                    <b>Select your Champion</b>\n                    <Search leagueData searchTerm={searchTerm} onChangeSearch={setSearchTerm}/>\n                    {Object.values(champsToDisplay).map(champion => {\n                    return (\n                        <div className=\"champion-container\" key={champion.id} onClick={() => handleSelectChampion(champion)}>\n                            <h3 className='champion-name'>{champion.name}</h3>\n                            <img \n                                className='champion-image' \n                                src={`http://ddragon.leagueoflegends.com/cdn/11.12.1/img/champion/${champion.image.full}`} \n                                alt=\"broken\"/>\n                        </div>\n                    )\n                    })}\n                </div>\n            </div>\n            <div className=\"user-information\">\n                <b>Current User: {currentUser.username} </b>\n                <button className=\"logout-button\" onClick={() => {\n                    history.push('/login')\n                    setCurrentUser({\n                        username: \"\",\n                        password: \"\"\n                    })\n                    }}>Logout</button>\n            </div>\n        </div>\n    )\n}\n        }\n\nexport default Home","import { useHistory } from 'react-router-dom'\n\nlet SelectGameMode = ({ \n        highlightGameMode1v1, setHighlightGameMode1v1,\n        highlightGameMode2v2, setHighlightGameMode2v2,\n        highlightMapSR, setHighlightMapSR,\n        highlightMapHA, setHighlightMapHA,\n        selectedMap, setSelectedMap, \n        selectedGameMode, setSelectedGameMode }) => {\n    const history = useHistory()\n\n    let handleSelectMap = (e) => {\n        setSelectedMap(e.target.textContent)\n        if(e.target.textContent===\"Summoner's Rift\") {\n            setHighlightMapHA(false)\n            setHighlightMapSR(!highlightMapSR)\n        } else {\n            setHighlightMapSR(false)\n            setHighlightMapHA(!highlightMapHA)\n        }\n    }\n\n    let handleSelectGameMode = (e) => {\n        setSelectedGameMode(e.target.id)\n        if(e.target.id===\"1v1\") {\n            setHighlightGameMode2v2(false)\n            setHighlightGameMode1v1(!highlightGameMode1v1)\n        } else {\n            setHighlightGameMode1v1(false)\n            setHighlightGameMode2v2(!highlightGameMode2v2)\n        }\n                \n        // if(selectedMap!==\"\" && selectedGameMode!==\"\") {\n        //     history.push('/')\n        // }\n    }\n\n    let handleGoBack= () => {\n        history.push('/')\n    }\n\n    return (\n        <div className=\"action-container\">\n            <button \n                id=\"summoners-rift\" \n                className='summoners-rift' \n                onClick={(e) => handleSelectMap(e)}\n                style={highlightMapSR===true ? {border:\"5px solid yellowgreen\"} : {border:\"none\"}}>\n                Summoner's Rift\n            </button>\n            <div className='select-game-mode-container'>\n                <button \n                    id=\"1v1\" \n                    className=\"select-game-mode-button\" \n                    onClick={(e) => handleSelectGameMode(e)}\n                    style={highlightGameMode1v1===true ? {border:\"5px solid yellowgreen\"} : {border:\"none\"}}\n                        >1 v 1\n                </button>\n                <button \n                    id=\"2v2\" \n                    className=\"select-game-mode-button\" \n                    onClick={(e) => handleSelectGameMode(e)}\n                    style={highlightGameMode2v2===true ? {border:\"5px solid yellowgreen\"} : {border:\"none\"}}\n                        >2 v 2\n                </button>\n                <button className=\"go-back\" onClick={()=> handleGoBack()}>Go back</button>\n            </div>\n            <button \n                id=\"Howling Abyss\" \n                className='howling-abyss' \n                onClick={(e) => handleSelectMap(e)}\n                style={highlightMapHA===true ? {border:\"5px solid yellowgreen\"} : {border:\"none\"}}\n                >\n                Howling Abyss\n            </button>\n\n        </div>)\n}\n\nexport default SelectGameMode","import { React, useState, useEffect } from 'react'\nimport {useParams, useHistory} from \"react-router-dom\"\nimport Search from './Search'\nimport Item from './Item'\nlet Play = ({currentUser,setCurrentUser,selectedChampion,setSelectedChampion}) => {\n    const [itemData, setItemData] = useState([])\n    const [selectedItems, setSelectedItems] = useState([null,null,null,null,null,null])\n    const [championData, setChampionData] = useState([])\n    const history = useHistory()\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const tempStat=[]\n\n    const [hasItem2, setHasItem2]=useState([false,false,false,false,false,false])\n    const [champStat, setChampStat] = useState({\n        hp:'',\n        hpperlevel:'',\n        mp:'',\n        mpperlevel:'',\n        movespeed:''  ,\n        armor:'',armorperlevel:'',spellblock:'',\n        spellblockperlevel:'',attackrange:'',hpregen:'',\n        hpregenperlevel:'',mpregen:'',mpregenperlevel:'',\n        crit:'',critperlevel:'',attackdamage:'',\n        attackdamageperlevel:'',attackspeedperlevel:'',attackspeed:''\n        \n});\n     let statList=['hp','hpperlevel','mp','mpperlevel','movespeed','armor','armorperlevel','spellblock','spellblockperlevel','attackrange','hpregen','hpregenperlevel','mpregen','mpregenperlevel','crit','critperlevel','attackdamage','attackdamageperlevel','attackspeedperlevel','attackspeed']\n    useEffect(() => {\n        fetch('http://ddragon.leagueoflegends.com/cdn/11.12.1/data/en_US/item.json')\n        .then(res => res.json())\n        .then(data => {\n            setItemData(data.data)\n        })\n    },[])\n    const iCanHas=(item)=>{\n            let testCase=hasItem2.filter((checking)=>checking===false)\n               if(testCase.length>0){\n                let result= (hasItem2.indexOf(false))\n                hasItem2[result]=true\n                selectedItems[result]=(item)\n                console.log(selectedItems)\n            }\n            else{alert('You already have enough many items!')}\n       \n    } \n    const handleSelectedItem=(item)=>{\n        //console.log(\"you selected\"+item.name)\n        iCanHas(item)\n        console.log(hasItem2)\n     }\n     //Select a filtered list of champs when entering a search\n    const itemsToDisplay = Object.values(itemData).filter((item) =>\n        item.name.toLowerCase().includes(searchTerm.toLowerCase())\n     ); \n    const displayStats=()=>{\n        let number=-1\n        Object.values(selectedChampion.stats).map(status=>{\n           tempStat.push(status)\n           \n        })\n\n\n\n        return  <div>\n                    <div>{selectedChampion.name} Stats</div>\n                    {Object.keys(selectedChampion.stats).map(element => {\n                            number=number+1\n                            //console.log(element)\n                          return  (<div className='stat-list'>{element+\" \"+tempStat[number]}</div>)\n                   \n                        \n                     })}\n                </div> \n     }\n\n    const removeItem=(space)=>{\n        selectedItems[space]=null\n        hasItem2[space]=false\n    }\n \n    return (\n        <div className='main-container'>\n            <div className=\"game-setup-container\">\n                <div><b>Map:</b> {}</div>\n                <div><b>Champion:</b> {selectedChampion.name} {selectedChampion.title}</div>\n                <div><b>Game Mode:</b> </div>\n            </div>\n \n            <div className='action-container'>\n                <div className='champion-viewer-container'\n                    style={{backgroundImage: `url(\n                    http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${selectedChampion.name}_0.jpg)`}}\n                >\n                    <h3 className=\"selected-champion-info\">{selectedChampion.name} {selectedChampion.title}</h3>\n                    <div className=\"champion-description\">{displayStats()}</div>\n                </div>\n                <div className='play-container'>\n                    <div className=\"select-game\">\n                    \n                        <div id='item1'className=\"item-selector\" onClick={removeItem(0)}>\n                            <img className='champion-image' src={hasItem2[0] ?`http://ddragon.leagueoflegends.com/cdn/11.12.1/img/item/${selectedItems[0].image.full}`:\"\"} alt=\"Pick an Item\"/>\n                        </div>\n                        <div id='item2'className=\"item-selector\" onClick={removeItem(1)}>\n                            <img className='champion-image' src={hasItem2[1] ?`http://ddragon.leagueoflegends.com/cdn/11.12.1/img/item/${selectedItems[1].image.full}`:\"\"} alt=\"Pick an Item\"/>\n                        </div>\n                        <div id='item3'className=\"item-selector\" onClick={removeItem(2)}>\n                            <img className='champion-image' src={hasItem2[2] ?`http://ddragon.leagueoflegends.com/cdn/11.12.1/img/item/${selectedItems[2].image.full}`:\"\"} alt=\"Pick an Item\"/>\n                        </div>\n                        <div id='item4'className=\"item-selector\" onClick={removeItem(3)}>\n                            <img className='champion-image' src={hasItem2[3] ?`http://ddragon.leagueoflegends.com/cdn/11.12.1/img/item/${selectedItems[3].image.full}`:\"\"} alt=\"Pick an Item\"/>\n                        </div>\n                        <div id='item5'className=\"item-selector\" onClick={removeItem(4)}>\n                            <img className='champion-image' src={hasItem2[4] ?`http://ddragon.leagueoflegends.com/cdn/11.12.1/img/item/${selectedItems[4].image.full}`:\"\"} alt=\"Pick an Item\"/>\n                        </div>\n                        <div id='item6'className=\"item-selector\" onClick={removeItem(5)}>\n                            <img className='champion-image' src={hasItem2[5] ?`http://ddragon.leagueoflegends.com/cdn/11.12.1/img/item/${selectedItems[5].image.full}`:\"\"} alt=\"Pick an Item\"/>\n                        </div>\n                        \n                    </div>\n                 \n \n                </div>\n                <div className='new-builds-container'>\n                    <b>Select your Item</b>\n                    <Search  searchTerm={searchTerm} onChangeSearch={setSearchTerm}/>\n                    {Object.values(itemsToDisplay).map(item => {\n                    return (\n                        <div className=\"champion-container\" key={item.id} onClick={() => handleSelectedItem(item)}>\n                            <h3 className='champion-name'>{item.name}</h3>\n                            <img className='champion-image' src={`http://ddragon.leagueoflegends.com/cdn/11.12.1/img/item/${item.image.full}`} alt=\"broken\"/>\n                        </div>\n                    )\n                    })}\n                </div>\n            </div>\n            <div className=\"return-home\" >\n                <button className =\"back-button\" onClick={()=>history.push('/')}>Home</button>\n            </div>\n            <div className=\"user-information\">\n                <b>Current User: {currentUser.username} </b>\n                <button className=\"logout-button\" onClick={() => {\n                    history.push('/login')\n                    setCurrentUser({\n                        username: \"\",\n                        password: \"\"\n                    })\n                    }}>Logout</button>\n            </div>\n        </div>)\n}\n \nexport default Play\n\n","import { useHistory } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\nlet Battle = ({ currentUser, setCurrentUser, selectedMap, selectedChampion, selectedGameMode }) => {\n    const history = useHistory();\n    const [opponentChampion, setOpponent] = useState(\"\")\n    const [healthState, setHealthState] = useState(100)\n    const [magicState, setMagicState] = useState(40)\n    const [attackState, setAttackState] = useState(30)\n    const [defendState, setDefendState] = useState(10)\n    const [defenseModeOn, setDefenseModeOn] = useState(false)\n    const [healthStateOpp, setHealthStateOpp] = useState(75)\n    const [magicStateOpp, setMagicStateOpp] = useState(50)\n    const [attackStateOpp, setAttackStateOpp] = useState(30)\n    const [defendStateOpp, setDefendStateOpp] = useState(7)\n    const [defenseModeOnOpp, setDefenseModeOnOpp] = useState(false)\n\n\n    useEffect(() => {\n        fetch('http://ddragon.leagueoflegends.com/cdn/11.12.1/data/en_US/champion.json')\n        .then(res => res.json())\n        .then(data => {\n            setOpponent(Object.values(data.data)[Math.floor(Math.random() * Object.values(data.data).length)])\n        })\n    },[])\n\n\n    let handleAttack = (e) => {\n        if((healthStateOpp-attackState)<0) {\n            setHealthStateOpp(healthStateOpp-(healthStateOpp-0))\n            alert('You won the battle. Returning to the Home Screen to start your next battle')\n            history.push('/')\n        } else if (defenseModeOnOpp===true) {\n            if(defendStateOpp>=attackState) {\n                alert(`Your opponent's defense completely blunted your attack. Luckily their armor needs to recharge`)\n                setHealthStateOpp(healthStateOpp-attackState+defendStateOpp)\n                setMagicState(magicState-(attackState/2))\n                setDefendStateOpp(defendStateOpp/2)\n                setDefenseModeOnOpp(true)\n                randomMove()\n            } else {\n                alert(`Your opponent's defense blunted your attack. You attacked for ${attackState-defendStateOpp} damage!`)\n                setHealthStateOpp(healthStateOpp-attackState+defendStateOpp)\n                setMagicState(magicState-(attackState/2))\n                setDefendStateOpp(defendStateOpp/2)\n                setDefenseModeOnOpp(false)\n                randomMove()\n            }\n        } else {\n            alert(`You attacked for ${attackState-defendStateOpp} damage!`)\n            setHealthStateOpp(healthStateOpp-attackState+defendStateOpp)\n            setMagicState(magicState-(attackState/2))\n            randomMove()\n        }\n    }\n \n    let handleDefend = (e) => {\n        if((healthState-attackStateOpp+(defendState*2))<0){\n            alert('You lost the battle. Returning to the Home Screen to start your next battle')\n            history.push('/')\n        } else {\n            alert(`You increased your defense by 2x until your opponent's next attack. Your defense is now ${defendState*2}!`)\n            setDefendState(defendState*2)\n            setDefenseModeOn(true)\n            randomMove()\n        }\n\n    }\n\n    let handleUseItem = (e) => {\n        console.log(e.target.parentElement.parentElement)\n    }\n\n    let handleFlee = (e) => {\n        alert('You fled the battle. Returning to the Home Screen to select a champion!')\n        history.push('/')\n    }\n\n    let oppMoveArray = [\"handleAttack\", \"handleDefend\"]\n\n    let randomMove = () => {\n        let randomOppMove = oppMoveArray[Math.floor(Math.random()*oppMoveArray.length)]\n        console.log(randomOppMove)\n        switch(randomOppMove) {\n            case \"handleAttack\":\n                console.log('opp attack')\n                if(healthState-attackStateOpp<0) {\n                    alert('You lost the battle. Returning to the home page to start your next battle!')\n                    history.push('/')\n                } else if (defenseModeOn===true) {\n                    if(defendState>attackStateOpp) {\n                        alert('Your defense completely stopped their attack! Unfortunately, your armor needs to be fixed and your defense has been cut in half!')\n                        setMagicStateOpp(magicStateOpp-(attackStateOpp/2))\n                        setDefendState(defendState/2)\n                        setDefenseModeOn(false)\n                    } else if (defendState>attackStateOpp){\n                        alert('Your defense completely stopped their attack! Unfortunately, your armor needs to be fixed and your defense has been cut in half!')\n                        setMagicStateOpp(magicStateOpp-(attackStateOpp/2))\n                        setDefendState(defendState/2)\n                        setDefenseModeOn(false)\n                    } else {\n                        alert(`Your defense worked! You reduced the damage of your opponent's attack! Your opponent attacked for ${attackStateOpp-defendState} damage!`)\n                        setHealthState(healthState-attackStateOpp+defendState)\n                        console.log(healthState)\n                        setMagicStateOpp(magicStateOpp-(attackStateOpp/2))\n                        setDefendState(defendState/2)\n                        setDefenseModeOn(false)\n                    }\n                } else {\n                    alert(`Your opponent attacked for ${attackStateOpp-defendState} damage!`)\n                    setHealthState(healthState-attackStateOpp+defendState)\n                    console.log(healthState)\n                    setMagicStateOpp(magicStateOpp-(attackStateOpp/2))\n                }\n                break;\n            case \"handleDefend\":\n                if((healthStateOpp-attackState+(defendStateOpp*2))<0){\n                    alert('You won the battle! Returning to the Home Screen to start your next battle')\n                    history.push('/')\n                } else {\n                    setDefendStateOpp(defendStateOpp*2)\n                    alert(`Your opponent increased their defense by 2x until your next attack!`)\n                    setDefenseModeOnOpp(true)\n                }\n                break;\n        }\n    }\n\n    return (\n        <div className=\"main-container\" id={selectedChampion.name}>\n            <div className=\"game-setup-container\">\n                <div><b>Map:</b> {selectedMap}</div>\n                <div><b>Champion:</b> {selectedChampion.name} {selectedChampion.title}</div>\n                <div><b>Game Mode:</b> {selectedGameMode}</div>\n            </div>\n            <div className=\"action-container\">\n                <div className=\"player-container\">\n                    <b>Name: {selectedChampion.name}</b>\n                    <div \n                        className=\"champion-battle-image\"\n                        style={{backgroundImage: `url(http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${selectedChampion.name}_0.jpg)`}}>\n                    </div>\n                    <div className=\"items-stats-container\">\n                        <div className=\"stats\">\n                            <div className=\"health-stats\">\n                                <h5>HP: {healthState}</h5>\n                                <h5>MP: {magicState}</h5>\n                            </div>\n                            <div className=\"fight-stats\">\n                                <h5>ATK: {attackState}</h5>\n                                <h5>DEF: {defendState}</h5>\n                            </div>\n                        </div>\n                        <div className=\"items\"></div>\n                    </div>\n                    <div className=\"movelist\">\n                        <button className=\"move-button\" onClick={(e) => handleAttack(e)}>Attack</button>\n                        <button className=\"move-button\" onClick={(e) => handleDefend(e)}>Defend</button>\n                        <button className=\"move-button\" onClick={(e) => handleUseItem(e)}>Use Item</button>\n                        <button className=\"move-button\" onClick={(e) => handleFlee(e)}>Flee</button>\n                    </div>\n                </div>\n                <div className=\"versus-container\">\n                    <h2 className=\"versus\">VS</h2>\n                </div>\n                <div className=\"player-container\">\n                    <b>Name: {opponentChampion.name} </b> \n                    <div \n                        className=\"champion-battle-image\" \n                        style={{backgroundImage: `url(http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${opponentChampion.name}_0.jpg)`}}\n                        >\n\n                    </div>\n                    <div className=\"items-stats-container\">\n                        <div className=\"stats\">\n                            <div className=\"health-stats\">\n                                <h5>HP: {healthStateOpp}</h5>\n                                <h5>MP: {magicStateOpp}</h5>\n                            </div>\n                            <div className=\"fight-stats\">\n                                <h5>ATK: {attackStateOpp}</h5>\n                                <h5>DEF: {defendStateOpp}</h5>\n                            </div>\n                        </div>\n                        <div className=\"items\"></div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"user-information\">\n                <b>Current User: {currentUser.username} </b>\n                <button className=\"go-back\" onClick={() => { history.push('/')}}>Go back</button>\n                <button \n                    className=\"logout-button\" \n                    onClick={() => {\n                    history.push('/login')\n                    setCurrentUser({\n                        username: \"\",\n                        password: \"\"\n                    })\n                    }}\n                >Logout</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Battle","import './App.css';\nimport { React, useState } from 'react'\nimport { Route, Switch, useHistory } from 'react-router-dom'\n\n//import components\nimport NavBar from './NavBar'\nimport Login from './Login'\nimport CreateLogin from './CreateLogin'\nimport Home from './Home'\nimport SelectGameMode from './SelectGameMode'\n\nimport Play from './Play'\n\nimport Battle from './Battle'\n\n\nfunction App() {\n  const [loginValidated, setLoginValidated] = useState(false)\n  const [selectedMap, setSelectedMap] = useState(\"\")\n  const [selectedChampion, setSelectedChampion] = useState([])\n  const [selectedGameMode, setSelectedGameMode] = useState(\"\")\n  const [highlightGameMode1v1, setHighlightGameMode1v1] = useState(\"false\")\n  const [highlightGameMode2v2, setHighlightGameMode2v2] = useState(\"false\")\n  const [highlightMapSR, setHighlightMapSR] = useState(\"false\")\n  const [highlightMapHA, setHighlightMapHA] = useState(\"false\")\n  const [currentUser, setCurrentUser] = useState({\n    username: \"\",\n    password: \"\"\n  })\n  const history = useHistory()\n\n  if (loginValidated===false) {\n    history.push('/login')\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/login\">\n            <Login \n              currentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n              loginValidated={loginValidated}\n              setLoginValidated={setLoginValidated}\n            />\n          </Route>\n          <Route exact path=\"/createlogin\">\n            <CreateLogin />\n          </Route>\n        </Switch>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/login\">\n            <Login \n              currentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n              loginValidated={loginValidated}\n              setLoginValidated={setLoginValidated}\n            />\n          </Route>\n          <Route exact path =\"/createlogin\">\n            <CreateLogin />\n          </Route>\n          <Route exact path =\"/selectgamemode\">\n            <SelectGameMode\n              highlightGameMode1v1={highlightGameMode1v1}\n              setHighlightGameMode1v1={setHighlightGameMode1v1}\n              highlightGameMode2v2={highlightGameMode2v2}\n              setHighlightGameMode2v2={setHighlightGameMode2v2}\n              highlightMapSR={highlightMapSR}\n              setHighlightMapSR={setHighlightMapSR}\n              highlightMapHA={highlightMapHA}\n              setHighlightMapHA={setHighlightMapHA}\n              selectedMap={selectedMap}\n              setSelectedMap={setSelectedMap}\n              selectedGameMode={selectedGameMode}\n              setSelectedGameMode={setSelectedGameMode}\n            />\n          </Route>\n          <Route exact path =\"/battle\">\n            <Battle \n              currentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n              selectedMap={selectedMap}\n              selectedChampion={selectedChampion}\n              selectedGameMode={selectedGameMode}\n            />\n          </Route>\n          <Route exact path=\"/\">\n            <Home \n              currentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n              selectedMap={selectedMap}\n              setSelectedMap={setSelectedMap}\n              selectedChampion={selectedChampion}\n              setSelectedChampion={setSelectedChampion}\n              selectedGameMode={selectedGameMode}\n              setSelectedGameMode={setSelectedGameMode}\n            />\n          </Route>\n          <Route exact path=\"/play/:id\">\n            <Play \n              currentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n              selectedChampion={selectedChampion}\n              setSelectedChampion={setSelectedChampion}\n\n            />\n          </Route>\n        </Switch>\n      </div>\n    )\n  }\n  }\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}